1. 탐욕알고리즘(Greedy Algorithm)

- 현재 상황에서 당장 가장 좋아 보이는 상황만을 선택하는 알고리즘
- 흔히, 그리디 알고리즘, 혹은 탐욕법이라고 불리기도 함.
- 최적의 해를 구하기 위한 근사적인 방법으로 사용될 때가 많다.

- 알고리즘 접근 방법
ⓐ 방법 고안하기 : 현재 상황에서 어떤 것을 선택할지 고안.
ⓑ 정당성 확인 : 고안한 알고리즘이 최적의 해를 보장하는지 확인.

▷ 예시 : 거스름 돈 문제
- 카운터에 500원, 100원, 50원, 10원짜리가 무수히 많은 경우
- 손님에게 6,480원을 거슬러 줄 경우 동전 개수의 최솟값은?

- 500원 : 12개 , 잔액 : 480원
- 100원 : 4개 , 잔액 : 80원
- 50원 : 1개, 잔액 : 30원
- 10원 : 3개, 잔액 0 원


※ 해결방법 : 가장 큰 화폐부터 거슬러 주는 것.

▷ 거스름 돈 문제의 해법 정당성 분석
- 단순히 큰 화폐부터 선택했을 때 최적의 해를 찾을 수 있는 이유는?
- 그 이유는, 각 화폐단위가 배수 관계에 있기 때문이다.

※ 120원을 거슬러 주어야 하는데, 80원, 60원, 10원 동전이라면?
- 최적 해 : 60원 × 2 = 120원, 2개 필요
- 80원부터 준다면, 10원이 4개가 필요하게 되어 총 5개가 필요함

문제. 동전 0 문제

- 문제
준규가 가지고 있는 동전은 총 N종류이고, 
각각의 동전을 매우 많이 가지고 있다.

동전을 적절히 사용해서 그 가치의 합을 K로 만들려고 한다. 
이때 필요한 동전 개수의 최솟값을 구하는 프로그램을 작성하시오.

- 입력
첫째 줄에 N과 K가 주어진다. (1 ≤ N ≤ 10, 1 ≤ K ≤ 100,000,000)
둘째 줄부터 N개의 줄에 동전의 가치 Ai가 오름차순으로 주어진다. 
(1 ≤ Ai ≤ 1,000,000, A1 = 1, i ≥ 2인 경우에 Ai는 Ai-1의 배수)

- 출력
첫째 줄에 K원을 만드는데 필요한 동전 개수의 최솟값을 출력한다.

- 예제 입력 1 
10 4200
1
5
10
50
100
500
1000
5000
10000
50000

- 예제 출력 1 
6


2. 이진탐색(Binary Search)

- 아래 리스트에서 7를 찾고자 한다.
- 이진탐색 : 탐색 범위를 절반씩 좁혀가며 데이터를 탐색한다.
    1, 3, 5, 7, 9, 11, 13, 15, 17, 19
- 탐색을 위한 복잡도 : O(logN)


3. 파라메트릭 서치
- 특정 조건을 만족하는 값을 가장 빠르게 찾는 최적화 문제

- 문제
국가의 역할 중 하나는 여러 지방의 예산요청을 심사하여 국가의 예산을 분배하는 것이다. 
국가예산의 총액은 미리 정해져 있어서 모든 예산요청을 배정해 주기는 어려울 수도 있다. 
그래서 정해진 총액 이하에서 가능한 한 최대의 총 예산을 다음과 같은 방법으로 배정한다.

모든 요청이 배정될 수 있는 경우에는 요청한 금액을 그대로 배정한다.
모든 요청이 배정될 수 없는 경우에는 특정한 정수 상한액을 계산하여 그 이상인 예산요청에는 
모두 상한액을 배정한다. 상한액 이하의 예산요청에 대해서는 요청한 금액을 그대로 배정한다. 
예를 들어, 전체 국가예산이 485이고 4개 지방의 예산요청이 각각 120, 110, 140, 150이라고 하자. 
이 경우, 상한액을 127로 잡으면, 위의 요청들에 대해서 각각 120, 110, 127, 127을 
배정하고 그 합이 484로 가능한 최대가 된다. 

여러 지방의 예산요청과 국가예산의 총액이 주어졌을 때, 위의 조건을 모두 만족하도록 
예산을 배정하는 프로그램을 작성하시오.

- 입력
첫째 줄에는 지방의 수를 의미하는 정수 N이 주어진다. 
N은 3 이상 10,000 이하이다. 
다음 줄에는 각 지방의 예산요청을 표현하는 N개의 정수가 빈칸을 사이에 두고 주어진다. 
이 값들은 모두 1 이상 100,000 이하이다. 
그 다음 줄에는 총 예산을 나타내는 정수 M이 주어진다. 
M은 N 이상 1,000,000,000 이하이다. 

- 출력
첫째 줄에는 배정된 예산들 중 최댓값인 정수를 출력한다. 

- 예제 입력 1 
4
120 110 140 150
485

- 예제 출력 1 
127

- 예제 입력 2 
5
70 80 30 40 100
450

- 예제 출력 2 
100 