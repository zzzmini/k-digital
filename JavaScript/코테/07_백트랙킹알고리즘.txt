1. 백트래킹이란?

- 일반적으로 그래프/트리에서 모든 원소를 완전탐색하기 위해 사용

※ 그래프를 표현하는 2가지 방식

                  1
                ／  ＼
                2 -- 4
                 ＼ ／
                   3          

ⓐ 인접행렬                        ⓑ 인접리스트
 0  1  0  0                        1  | 2
 1  0  1  1                        2  | 1, 3, 4
 0  1  0  1                        3  | 2, 4
 0  1  1  0                        4  | 2, 3

2. N-Queen 문제
- Queen 은 같은 행과 열과 대각선에 있는 퀸을 공격할 수 있다.
- 만약 N개의 체스판이 주어졌을 때 Queen을 놓을 수 있는 가짓수를 구함

※ 해결 아이디어
- 이 문제는 가능한 모든 조합의 수를 구하는 것과 같다.
- 매 재귀함수마다 실제로 N × N 모든 위치를 볼 필요가 없다.
[핵심] 맨 처음 행부터 차례대로 퀸을 놓는다고 생가하면 가짓수를 줄일 수 있다.
- 이 문제는 가능한 조합을 계산하는 것이므로, 현재 행 이전으로 
  돌아갈 필요가 없다.

------------------------------------------------------------------
let n = 8;
let queens = [];

function possible(x, y){
    for(let [a, b] of queens){
        if(a == x || b == y) return false;
        if(Math.abs(a - x) == Math.abs(b - y)) return false;
    }
    return true;
}

let cnt = 0;
function dfs(row){
    if (row == n) cnt += 1;
    for(let i = 0; i < n; i++){
        if(!possible(row, i)) continue;
        queens.push([row, i]);
        dfs(row + 1);
        queens.pop();
    }
}

dfs(0);
console.log(cnt);
------------------------------------------------------------------    

2. 백트래킹 문제
- 문제 1
자연수 N과 M이 주어졌을 때, 아래 조건을 만족하는 길이가 M인 순열을 모두 구하는 
프로그램을 작성하시오.

- 입력
첫째 줄에 자연수 N과 M이 주어진다. (1 ≤ M ≤ N ≤ 8)
N은 고를 수 있는 자연수의 범위, M은 골라야 하는 수의 갯수

- 출력
한 줄에 하나씩 문제의 조건을 만족하는 수열을 출력한다. 
중복되는 수열은 출력하면 안되며, 각 수열은 공백으로 구분해서 출력해야 한다.

수열은 사전 순으로 증가하는 순서로 출력해야 한다.

- 예제 입력 1 
3 1
- 예제 출력 1 
1
2
3

- 예제 입력 2 
4 2
- 예제 출력 2 
1 2
1 3
1 4
2 1
2 3
2 4
3 1
3 2
3 4
4 1
4 2
4 3

- 예제 입력 3 
4 4
- 예제 출력 3 
1 2 3 4
1 2 4 3
1 3 2 4
1 3 4 2
1 4 2 3
1 4 3 2
2 1 3 4
2 1 4 3
2 3 1 4
2 3 4 1
2 4 1 3
2 4 3 1
3 1 2 4
3 1 4 2
3 2 1 4
3 2 4 1
3 4 1 2
3 4 2 1
4 1 2 3
4 1 3 2
4 2 1 3
4 2 3 1
4 3 1 2
4 3 2 1

☆ 문제 해결 아이디어
- 4개의 수 [1,2,3,4]에서 3개를 고르는 모든 순열
- 깊이가 3인 경우 고려
- 경우의 수 : 4! = 4 × 3 × 2 × 1 = 24

                                        시작
                                           
               1                  2        ...........  
             ／ |＼             ／ |＼
            2   3  4          1   3  4     
           ／＼／＼／＼       ／＼／＼／＼
           3 4 2 4 2 3       3 4 1 4 1 3


------------------------------------------------------------------    
let fs = require('fs');
let input = fs.readFileSync('07_01_exam.txt').toString().split('\n');

let [n, m] = input[0].split(' ').map(Number);
// n = 4, m = 2
let arr = [];
for(let i = 1; i<=n ; i++){
    arr.push(i);
}

let visited = new Array(n).fill(false);
let selected = [];

let answer = '';
function dfs(arr, depth){
    if(depth == m){
        let result = [];
        for(let i of selected){
            result.push(arr[i]);
        }
        for(let x of result){
            answer += x + ' ';
        }
        answer += '\n';
        return;
    }
    for(let i=0; i<arr.length; i++){
        if(visited[i]) continue;
        selected.push(i);
        visited[i] = true;
        dfs(arr, depth+1);
        selected.pop();
        visited[i] = false;
    }
}

dfs(arr, 0);
console.log(answer);
------------------------------------------------------------------    
