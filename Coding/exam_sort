※ 자바스크립트 정렬 라이브러리 : sort()

1. 숫자의 정렬
- 배열에 포함된 데이터를 정렬하는 sort() 함수를 제공
- 최악의 경우 시간복잡도 O(NlogN)을 보장

※ 두 개의 원소 a, b를 입력 받은 경우
ⓐ 반환값이 0 보다 작은 경우 -> a가 우선순위가 높아, 앞에 위치
ⓑ 반환값이 0 보다 큰 경우 -> b가 우선순위가 높아, 앞에 위치
ⓒ 반환 값이 0 인 경우 -> 순서 변화 없음.
ⓓ 위의 비교를 사용하지 않으면 문자열 처리가 된다.

------------------------------------------------------------------
let fs = require('fs');
input = fs.readFileSync('sort.txt').toString().split('\n');
let data = input[0].split(' ').map(Number);
console.log('source = ' + data);

data.sort((a, b)=> a-b);
console.log('result(asc) = ' + data);

data.sort((a, b)=> b-a);
console.log('result(desc) = ' + data);
------------------------------------------------------------------

2. 문자의 정렬
- 기본 오름차순 정렬은 내부 함수 없이 가능
- 내림차순  정렬은 함수 명기 필요

------------------------------------------------------------------
let data = ['fineapple', 'durian', 'carrot', 'banana', 'apple'];
console.log('source = ' + data);
data.sort();
console.log('result(asc) = ' + data);

data.sort(compare);
console.log('result(desc) = ' + data);

function compare(a,b){
    if(a>b) return -1;
    if(a<b) return 1;
    else return 0;
}
------------------------------------------------------------------

3. 대소문자 무관하게 비교하기(toUpperCase)
-- 위의 자료에서 carrot을 Carrot로 바꾸면 정렬 안됨.. 대문자 나중에
- 모든 문자를 아예 대문자로 변환비교 처리 해야 함.

------------------------------------------------------------------
function compare(a,b){
    let upperA = a.toUpperCase();
    let upperB = b.toUpperCase();
    if(upperA>upperB) return -1;
    if(upperA<upperB) return 1;
    else return 0;
}
------------------------------------------------------------------

4. 객체 비교하기

------------------------------------------------------------------
let data = [
    {name: '홍길동', score : 90},
    {name: '김철수', score : 85},
    {name: '박영희', score : 99},
];
console.log(data);
// 성적 오름차순 정렬하기(즉, 성적 순...)
data.sort((a,b) => (b.score - a.score));

function compare(a, b){
    return b.score - a.score;
}
console.log(data);
------------------------------------------------------------------


문제 1. 좌표정렬하기

- 문제
2차원 평면 위의 점 N개가 주어진다. 좌표를 x좌표가 증가하는 순으로, 
x좌표가 같으면 y좌표가 증가하는 순서로 정렬한 다음 
출력하는 프로그램을 작성하시오.

- 입력
첫째 줄에 점의 개수 N (1 ≤ N ≤ 100,000)이 주어진다. 
둘째 줄부터 N개의 줄에는 i번점의 위치 xi와 yi가 주어진다. 
(-100,000 ≤ xi, yi ≤ 100,000) 좌표는 항상 정수이고, 
위치가 같은 두 점은 없다.

- 출력
첫째 줄부터 N개의 줄에 점을 정렬한 결과를 출력한다.

- 예제 입력 1 
5
3 4
1 1
1 -1
2 2
3 3

- 예제 출력 1 
1 -1
1 1
2 2
3 3
3 4

------------------------------------------------------------------


문제 2. 단어정렬

- 문제
알파벳 소문자로 이루어진 N개의 단어가 들어오면 아래와 같은 조건에 따라 
정렬하는 프로그램을 작성하시오.

길이가 짧은 것부터
길이가 같으면 사전 순으로
단, 중복된 단어는 하나만 남기고 제거해야 한다.

- 입력
첫째 줄에 단어의 개수 N이 주어진다. (1 ≤ N ≤ 20,000) 
둘째 줄부터 N개의 줄에 걸쳐 알파벳 소문자로 이루어진 단어가 한 줄에 하나씩 주어진다. 
주어지는 문자열의 길이는 50을 넘지 않는다.

- 출력
조건에 따라 정렬하여 단어들을 출력한다.

- 예제 입력 1 
13
but
i
wont
hesitate
no
more
no
more
it
cannot
wait
im
yours

- 예제 출력 1 
i
im
it
no
but
more
wait
wont
yours
cannot
hesitate


문제 3. 값의 상대적 순위구하기

- 문제
여러개의 값을 입력받아 작은 값부터 큰 값의 상대 순위를 구하시오.

- 입력
첫째 줄에 N이 주어진다.
둘째 줄에는 공백 한 칸으로 구분된 X1, X2, ..., XN이 주어진다.

- 출력
첫째 줄에 X'1, X'2, ..., X'N을 공백 한 칸으로 구분해서 출력한다.

- 예제 입력 1 
5
2 4 -10 4 -9

- 예제 출력 1 
2 3 0 3 1

- 예제 입력 2
6
1000 999 1000 999 1000 999

- 예제 출력 2
1 0 1 0 1 0


문제 4. 숫자의 정렬

- 문제
배열을 정렬하는 것은 쉽다. 수가 주어지면, 
그 수의 각 자리수를 내림차순으로 정렬해보자.

- 입력
첫째 줄에 정렬하려고 하는 수 N이 주어진다. 
N은 1,000,000,000보다 작거나 같은 자연수이다.

- 출력
첫째 줄에 자리수를 내림차순으로 정렬한 수를 출력한다.

- 예제 입력 1 
2143
- 예제 출력 1 
4321

- 예제 입력 2 
999998999
- 예제 출력 2 
999999998

- 예제 입력 3 
61423
- 예제 출력 3 
64321

